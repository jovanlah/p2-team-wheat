---
title: Most Popular Messaging Apps by Country (June 2024)
format:
  poster-typst: 
    size: "33x23" # Approximately A1
    poster-authors: "Ho, J.W., Tan S.T, Soh M.L., Ng G.T, Lua Z.Z, Kim, B.J."
    departments: "Information and Communication Technologies"
    institution-logo: "./images/sit-logo.png"
    # footer-text: "Information Visualization 2024"
    # footer-emails: "2101708@sit.singaporetech.edu.sg"
    footer-text: "Team Wheat 2024"
    footer-url: "https://github.com/jovanlah/p2-team-wheat"
    footer-emails: "2101708,2100901,2102954,2102770,2101393,2101249"
    footer-color: "F5DEB3"
    
    univ-logo-scale: "100"
    title-font-size: "36"
    authors-font-size: "20"
    univ-logo-column-size: "4"
    title-column-size: "10"

execute:
  echo: false
  warning: false
  message: false
knitr:
  opts_chunk:
    dev: svglite
---
```{r}
#| label: setup
#| include: false

library(knitr)
library(readr)
library(tmap)
library(tidyverse)
library(sf)
library(scales)
library(RColorBrewer)
```

# Introduction

The poster titled "Top Messaging Apps by Country" provides a global overview of the most popular messaging applications used across different regions. The data is visualized through a world map, color-coded to represent the dominant messaging app in each country. The apps included in this analysis are WhatsApp, Messenger, Viber, WeChat, Line, Telegram, imo, and KakaoTalk. This visualization is based on Google Play download data as of February 2023, with the source being Sinch Engage. The purpose of this poster is to highlight regional preferences for messaging apps, which can be valuable for understanding communication trends and market dynamics in different parts of the world.

# Previous Visualization

![Most Popular Messaging Apps by Country](./images/previous-visualization.jpg){width=100%}
[*https://engage.sinch.com/blog/most-popular-messaging-apps-in-the-world/*](https://engage.sinch.com/blog/most-popular-messaging-apps-in-the-world/)


# Suggested Improvements

1. **Add a Legend**: Ensure the legend is clear and visible, associating each color with the corresponding messaging app.

2. **Color-Blind** Friendly Palette: Use a color-blind friendly palette to ensure the map is accessible to all viewers. Or you can use different patterns/shades instead of relying solely on color.

3. **Clear Title and Description**: Update the title to be more descriptive, such as "Most Popular Messaging Apps by Country (June 2024)". Include a subtitle explaining the criteria for determining the most popular app.

4. **Data Source and Date Visibility**: Place the data source and date information prominently near the title or in a footer to ensure it's easily visible.

5. **Highlight Key Insights**: Add annotations or highlights to point out interesting patterns or notable exceptions in the data. E.g., highlight regions where less common apps like imo or Kakaotalk are the top choice.

6. **Use of Borders and Labels**: Ensure country borders are clear and labeled appropriately to help users easily identify regions. Include country names or ISO codes to assist with identification.

# Implementation

# Improved Visualization
```{r, fig.width=10, fig.height=6}
#read messaging app popularity csv
messaging_app_popularity <- read_csv("./data/messaging-app-popularity.csv")

# Load the World data from the tmap package
data(World)

# Define the countries you want to exclude
countries_to_exclude <- c("Antarctic Lands", "Antarctica", "Antarctic Lands")

# Exclude specified countries from world_map
world_map <- World %>%
  filter(!(name %in% countries_to_exclude))

# Display the filtered world_map
# print(world_map)

# Left-join the World object with the messaging_app_popularity data frame
map_data_sf <- world_map %>%
  left_join(messaging_app_popularity, by = c("name" = "Country")) %>%
  select(code = iso_a3, area, geometry, Messaging_App)
map_data_sf <- st_transform(map_data_sf, crs = 4326)

# Add a column for labeling the 20 largest countries by land area
map_data_sf <- map_data_sf %>%
  arrange(desc(area)) %>%
  mutate(country_label = if_else(row_number() <= 20, code, ""))

# Create a simple feature collection for the Earth's boundaries (excluding Antarctica)
earth <- st_polygon(
  x = list(
    cbind(
      c(-180, 180, 180, -180, -180),  # Adjust the horizontal extent as needed
      c(-60, -60, 90, 90, -60)  # Adjust the vertical extent as needed
    )
  )
) %>%
  st_sfc() %>%
  st_set_crs(4326) %>%
  st_as_sf()

# Create the base map with world boundaries
gg_world_boundary <- ggplot() +
  geom_sf(data = earth, fill = "aliceblue") +
  geom_sf(color = NA) +
  theme_void() +
  theme(panel.grid = element_line(color = NA),
        panel.background = element_blank(),
        panel.ontop = TRUE)

# Create the choropleth map with binned color scale and clear country borders
choropleth_map <- gg_world_boundary +
  geom_sf(data = map_data_sf, aes(fill = Messaging_App), color = NA) +  # Main fill layer
  geom_sf(data = map_data_sf, fill = NA, color = "black", size = 0.1) +  # Border layer
  scale_fill_brewer(palette = "Set1") +  # Using RColorBrewer palette
  geom_sf_text(data = map_data_sf, aes(label = country_label), size = 3, color ="white") +
  scale_color_identity() +
  labs(title = "Most Popular Messaging Apps by Country",
       subtitle = "Most active users on each messaging app (for Android and iPhones)",
       caption = "Source: EagerNomad") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, margin = margin(b = 10, t = 5)),  # Add padding below the subtitle
        legend.position = "top",
        legend.title = element_blank(),
        legend.key.width = unit(3, "lines"),
        plot.caption = element_text(hjust = 1, margin = margin(t = 10, r = 10, b = 10, l = 10)),
        axis.text = element_blank(),  # Remove axis text
        axis.ticks = element_blank(), # Remove axis ticks
        axis.title = element_blank()) # Remove axis titles

# Display the map
print(choropleth_map)

```


![Most Popular Messaging Apps by Country](./images/improved-visualization.jpg){width=100%}


# Further Suggestions for Interactivity

# Conclusion


## Reference
